//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SDL2;
    using System;
    
    
    public class SDL21SDL1SDL_PixelFormatWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginClass(typeof(SDL2.SDL.SDL_PixelFormat), typeof(System.ValueType));
			L.RegFunction("New", _CreateSDL21SDL1SDL_PixelFormat);
			L.RegVar("format", get_format, set_format);
			L.RegVar("palette", get_palette, set_palette);
			L.RegVar("BitsPerPixel", get_BitsPerPixel, set_BitsPerPixel);
			L.RegVar("BytesPerPixel", get_BytesPerPixel, set_BytesPerPixel);
			L.RegVar("Rmask", get_Rmask, set_Rmask);
			L.RegVar("Gmask", get_Gmask, set_Gmask);
			L.RegVar("Bmask", get_Bmask, set_Bmask);
			L.RegVar("Amask", get_Amask, set_Amask);
			L.RegVar("Rloss", get_Rloss, set_Rloss);
			L.RegVar("Gloss", get_Gloss, set_Gloss);
			L.RegVar("Bloss", get_Bloss, set_Bloss);
			L.RegVar("Aloss", get_Aloss, set_Aloss);
			L.RegVar("Rshift", get_Rshift, set_Rshift);
			L.RegVar("Gshift", get_Gshift, set_Gshift);
			L.RegVar("Bshift", get_Bshift, set_Bshift);
			L.RegVar("Ashift", get_Ashift, set_Ashift);
			L.RegVar("refcount", get_refcount, set_refcount);
			L.RegVar("next", get_next, set_next);
			L.RegFunction("Equals", Equals);
			L.RegFunction("GetHashCode", GetHashCode);
			L.RegFunction("ToString", ToString);
			L.RegFunction("GetType", GetType);
			L.EndClass();
        }
        
        private static int _CreateSDL21SDL1SDL_PixelFormat(UniLua.ILuaState L)
        {
			L.L_Error("call SDL_PixelFormat constructor args is error");
			return 1;
        }
        
        private static int get_format(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<uint>(obj.format);
			return 1;
        }
        
        private static int set_format(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<uint>(2);
			obj.format = value;
			return 0;
        }
        
        private static int get_palette(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<System.IntPtr>(obj.palette);
			return 1;
        }
        
        private static int set_palette(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<System.IntPtr>(2);
			obj.palette = value;
			return 0;
        }
        
        private static int get_BitsPerPixel(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.BitsPerPixel);
			return 1;
        }
        
        private static int set_BitsPerPixel(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.BitsPerPixel = value;
			return 0;
        }
        
        private static int get_BytesPerPixel(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.BytesPerPixel);
			return 1;
        }
        
        private static int set_BytesPerPixel(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.BytesPerPixel = value;
			return 0;
        }
        
        private static int get_Rmask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<uint>(obj.Rmask);
			return 1;
        }
        
        private static int set_Rmask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<uint>(2);
			obj.Rmask = value;
			return 0;
        }
        
        private static int get_Gmask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<uint>(obj.Gmask);
			return 1;
        }
        
        private static int set_Gmask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<uint>(2);
			obj.Gmask = value;
			return 0;
        }
        
        private static int get_Bmask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<uint>(obj.Bmask);
			return 1;
        }
        
        private static int set_Bmask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<uint>(2);
			obj.Bmask = value;
			return 0;
        }
        
        private static int get_Amask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<uint>(obj.Amask);
			return 1;
        }
        
        private static int set_Amask(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<uint>(2);
			obj.Amask = value;
			return 0;
        }
        
        private static int get_Rloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Rloss);
			return 1;
        }
        
        private static int set_Rloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Rloss = value;
			return 0;
        }
        
        private static int get_Gloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Gloss);
			return 1;
        }
        
        private static int set_Gloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Gloss = value;
			return 0;
        }
        
        private static int get_Bloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Bloss);
			return 1;
        }
        
        private static int set_Bloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Bloss = value;
			return 0;
        }
        
        private static int get_Aloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Aloss);
			return 1;
        }
        
        private static int set_Aloss(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Aloss = value;
			return 0;
        }
        
        private static int get_Rshift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Rshift);
			return 1;
        }
        
        private static int set_Rshift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Rshift = value;
			return 0;
        }
        
        private static int get_Gshift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Gshift);
			return 1;
        }
        
        private static int set_Gshift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Gshift = value;
			return 0;
        }
        
        private static int get_Bshift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Bshift);
			return 1;
        }
        
        private static int set_Bshift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Bshift = value;
			return 0;
        }
        
        private static int get_Ashift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<byte>(obj.Ashift);
			return 1;
        }
        
        private static int set_Ashift(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<byte>(2);
			obj.Ashift = value;
			return 0;
        }
        
        private static int get_refcount(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<int>(obj.refcount);
			return 1;
        }
        
        private static int set_refcount(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<int>(2);
			obj.refcount = value;
			return 0;
        }
        
        private static int get_next(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			L.PushAny<System.IntPtr>(obj.next);
			return 1;
        }
        
        private static int set_next(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
			var value = L.CheckAny<System.IntPtr>(2);
			obj.next = value;
			return 0;
        }
        
        private static int Equals(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SDL2.SDL.SDL_PixelFormat, object>(1))
			{
				bool result;
				var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
				var arg1 = L.CheckAny<object>(2);
				result = obj.Equals(arg1);
				L.PushAny<bool>(result);
				return 1;
			}
			L.L_Error("call function Equals args is error");
			return 1;
        }
        
        private static int GetHashCode(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				int result;
				var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
				result = obj.GetHashCode();
				L.PushAny<int>(result);
				return 1;
			}
			L.L_Error("call function GetHashCode args is error");
			return 1;
        }
        
        private static int ToString(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				string result;
				var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
				result = obj.ToString();
				L.PushAny<string>(result);
				return 1;
			}
			L.L_Error("call function ToString args is error");
			return 1;
        }
        
        private static int GetType(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				System.Type result;
				var obj = (SDL2.SDL.SDL_PixelFormat) L.ToUserData(1);
				result = obj.GetType();
				L.PushAny<System.Type>(result);
				return 1;
			}
			L.L_Error("call function GetType args is error");
			return 1;
        }
    }
}
