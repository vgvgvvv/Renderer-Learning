//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using MathLib;
    using System;
    
    
    public class MathLib1PerlinNoiseWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginStaticLib("PerlinNoise");
			L.RegFunction("Noise", Noise);
			L.RegFunction("NoiseNormalized", NoiseNormalized);
			L.EndStaticLib();
        }
        
        private static int Noise(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<float, float>(1))
			{
				float result;
				var arg1 = L.CheckAny<float>(1);
				var arg2 = L.CheckAny<float>(2);
				result = MathLib.PerlinNoise.Noise(arg1, arg2);
				L.PushAny<float>(result);
				return 1;
			}
			L.L_Error("call function Noise args is error");
			return 1;
        }
        
        private static int NoiseNormalized(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<float, float>(1))
			{
				float result;
				var arg1 = L.CheckAny<float>(1);
				var arg2 = L.CheckAny<float>(2);
				result = MathLib.PerlinNoise.NoiseNormalized(arg1, arg2);
				L.PushAny<float>(result);
				return 1;
			}
			L.L_Error("call function NoiseNormalized args is error");
			return 1;
        }
    }
}
