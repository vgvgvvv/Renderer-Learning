//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SoftwareRenderer.Render;
    using System;
    using MathLib;
    
    
    public class SoftwareRenderer1Render1BaseVertexInWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginClass(typeof(SoftwareRenderer.Render.BaseVertexIn), typeof(System.ValueType));
			L.RegFunction("New", _CreateSoftwareRenderer1Render1BaseVertexIn);
			L.RegVar("Position", get_Position, set_Position);
			L.RegVar("VertexColor", get_VertexColor, set_VertexColor);
			L.RegVar("Normal", get_Normal, set_Normal);
			L.RegFunction("Equals", Equals);
			L.RegFunction("GetHashCode", GetHashCode);
			L.RegFunction("ToString", ToString);
			L.RegFunction("GetType", GetType);
			L.EndClass();
        }
        
        private static int _CreateSoftwareRenderer1Render1BaseVertexIn(UniLua.ILuaState L)
        {
			L.L_Error("call BaseVertexIn constructor args is error");
			return 1;
        }
        
        private static int get_Position(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
			L.PushAny<MathLib.Vector3>(obj.Position);
			return 1;
        }
        
        private static int set_Position(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
			var value = L.CheckAny<MathLib.Vector3>(2);
			obj.Position = value;
			return 0;
        }
        
        private static int get_VertexColor(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
			L.PushAny<MathLib.Color>(obj.VertexColor);
			return 1;
        }
        
        private static int set_VertexColor(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
			var value = L.CheckAny<MathLib.Color>(2);
			obj.VertexColor = value;
			return 0;
        }
        
        private static int get_Normal(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
			L.PushAny<MathLib.Vector3>(obj.Normal);
			return 1;
        }
        
        private static int set_Normal(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
			var value = L.CheckAny<MathLib.Vector3>(2);
			obj.Normal = value;
			return 0;
        }
        
        private static int Equals(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Render.BaseVertexIn, object>(1))
			{
				bool result;
				var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
				var arg1 = L.CheckAny<object>(2);
				result = obj.Equals(arg1);
				L.PushAny<bool>(result);
				return 1;
			}
			L.L_Error("call function Equals args is error");
			return 1;
        }
        
        private static int GetHashCode(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				int result;
				var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
				result = obj.GetHashCode();
				L.PushAny<int>(result);
				return 1;
			}
			L.L_Error("call function GetHashCode args is error");
			return 1;
        }
        
        private static int ToString(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				string result;
				var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
				result = obj.ToString();
				L.PushAny<string>(result);
				return 1;
			}
			L.L_Error("call function ToString args is error");
			return 1;
        }
        
        private static int GetType(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				System.Type result;
				var obj = (SoftwareRenderer.Render.BaseVertexIn) L.ToUserData(1);
				result = obj.GetType();
				L.PushAny<System.Type>(result);
				return 1;
			}
			L.L_Error("call function GetType args is error");
			return 1;
        }
    }
}
