//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SoftwareRenderer.Render;
    using System;
    using MathLib;
    
    
    public class SoftwareRenderer1Render1TextureWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginClass(typeof(SoftwareRenderer.Render.Texture), null);
			L.RegFunction("New", _CreateSoftwareRenderer1Render1Texture);
			L.RegVar("Pixels", get_Pixels, null);
			L.RegVar("Width", get_Width, null);
			L.RegVar("Height", get_Height, null);
			L.RegVar("FilterMode", get_FilterMode, set_FilterMode);
			L.RegFunction("LoadFromFile", LoadFromFile);
			L.RegFunction("Sample", Sample);
			L.RegFunction("GetType", GetType);
			L.RegFunction("ToString", ToString);
			L.RegFunction("Equals", Equals);
			L.RegFunction("GetHashCode", GetHashCode);
			L.EndClass();
        }
        
        private static int _CreateSoftwareRenderer1Render1Texture(UniLua.ILuaState L)
        {
			if(L.CheckNum(2)&& L.CheckType<int, int>(1))
			{
				var arg1 = L.CheckAny<int>(1);
				var arg2 = L.CheckAny<int>(2);
				return 1;
			}
			L.L_Error("call Texture constructor args is error");
			return 1;
        }
        
        private static int get_Pixels(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
			L.PushAny<MathLib.Color[,]>(obj.Pixels);
			return 1;
        }
        
        private static int get_Width(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
			return 1;
        }
        
        private static int get_Height(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
			return 1;
        }
        
        private static int get_FilterMode(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
			L.PushAny<SoftwareRenderer.Render.TextureFilterMode>(obj.FilterMode);
			return 1;
        }
        
        private static int set_FilterMode(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
			var value = L.CheckAny<SoftwareRenderer.Render.TextureFilterMode>(2);
			obj.FilterMode = value;
			return 0;
        }
        
        private static int LoadFromFile(UniLua.ILuaState L)
        {
			if(L.CheckNum(1) && L.CheckType<string>(1))
			{
				SoftwareRenderer.Render.Texture result;
				var arg1 = L.CheckAny<string>(1);
				result = SoftwareRenderer.Render.Texture.LoadFromFile(arg1);
				L.PushAny<SoftwareRenderer.Render.Texture>(result);
				return 1;
			}
			L.L_Error("call function LoadFromFile args is error");
			return 1;
        }
        
        private static int Sample(UniLua.ILuaState L)
        {
			if(L.CheckNum(3) && L.CheckType<SoftwareRenderer.Render.Texture, float, float>(1))
			{
				MathLib.Color result;
				var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
				var arg1 = L.CheckAny<float>(2);
				var arg2 = L.CheckAny<float>(3);
				result = obj.Sample(arg1, arg2);
				L.PushAny<MathLib.Color>(result);
				return 1;
			}
			L.L_Error("call function Sample args is error");
			return 1;
        }
        
        private static int GetType(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				System.Type result;
				var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
				result = obj.GetType();
				L.PushAny<System.Type>(result);
				return 1;
			}
			L.L_Error("call function GetType args is error");
			return 1;
        }
        
        private static int ToString(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				string result;
				var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
				result = obj.ToString();
				L.PushAny<string>(result);
				return 1;
			}
			L.L_Error("call function ToString args is error");
			return 1;
        }
        
        private static int Equals(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Render.Texture, object>(1))
			{
				bool result;
				var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
				var arg1 = L.CheckAny<object>(2);
				result = obj.Equals(arg1);
				L.PushAny<bool>(result);
				return 1;
			}
			L.L_Error("call function Equals args is error");
			return 1;
        }
        
        private static int GetHashCode(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				int result;
				var obj = (SoftwareRenderer.Render.Texture) L.ToUserData(1);
				result = obj.GetHashCode();
				L.PushAny<int>(result);
				return 1;
			}
			L.L_Error("call function GetHashCode args is error");
			return 1;
        }
    }
}
