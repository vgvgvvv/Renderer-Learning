//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SoftwareRenderer.Core;
    using MathLib;
    using System;
    
    
    public class SoftwareRenderer1Core1TransformWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginClass(typeof(SoftwareRenderer.Core.Transform), null);
			L.RegFunction("New", _CreateSoftwareRenderer1Core1Transform);
			L.RegVar("position", get_position, set_position);
			L.RegVar("scale", get_scale, set_scale);
			L.RegVar("rotation", get_rotation, set_rotation);
			L.RegVar("eulerAngle", get_eulerAngle, set_eulerAngle);
			L.RegVar("TransformMat", get_TransformMat, null);
			L.RegFunction("GetType", GetType);
			L.RegFunction("ToString", ToString);
			L.RegFunction("Equals", Equals);
			L.RegFunction("GetHashCode", GetHashCode);
			L.EndClass();
        }
        
        private static int _CreateSoftwareRenderer1Core1Transform(UniLua.ILuaState L)
        {
			if(L.CheckNum(0))
			{
				L.PushAny<SoftwareRenderer.Core.Transform>(new SoftwareRenderer.Core.Transform());
				return 1;
			}
			L.L_Error("call Transform constructor args is error");
			return 1;
        }
        
        private static int get_position(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			L.PushAny<MathLib.Vector3>(obj.position);
			return 1;
        }
        
        private static int set_position(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			var value = L.CheckAny<MathLib.Vector3>(2);
			obj.position = value;
			return 0;
        }
        
        private static int get_scale(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			L.PushAny<MathLib.Vector3>(obj.scale);
			return 1;
        }
        
        private static int set_scale(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			var value = L.CheckAny<MathLib.Vector3>(2);
			obj.scale = value;
			return 0;
        }
        
        private static int get_rotation(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			L.PushAny<MathLib.Quaternion>(obj.rotation);
			return 1;
        }
        
        private static int set_rotation(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			var value = L.CheckAny<MathLib.Quaternion>(2);
			obj.rotation = value;
			return 0;
        }
        
        private static int get_eulerAngle(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			L.PushAny<MathLib.Vector3>(obj.eulerAngle);
			return 1;
        }
        
        private static int set_eulerAngle(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			var value = L.CheckAny<MathLib.Vector3>(2);
			obj.eulerAngle = value;
			return 0;
        }
        
        private static int get_TransformMat(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
			L.PushAny<MathLib.Matrix4x4>(obj.TransformMat);
			return 1;
        }
        
        private static int GetType(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				System.Type result;
				var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
				result = obj.GetType();
				L.PushAny<System.Type>(result);
				return 1;
			}
			L.L_Error("call function GetType args is error");
			return 1;
        }
        
        private static int ToString(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				string result;
				var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
				result = obj.ToString();
				L.PushAny<string>(result);
				return 1;
			}
			L.L_Error("call function ToString args is error");
			return 1;
        }
        
        private static int Equals(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Core.Transform, object>(1))
			{
				bool result;
				var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
				var arg1 = L.CheckAny<object>(2);
				result = obj.Equals(arg1);
				L.PushAny<bool>(result);
				return 1;
			}
			L.L_Error("call function Equals args is error");
			return 1;
        }
        
        private static int GetHashCode(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				int result;
				var obj = (SoftwareRenderer.Core.Transform) L.ToUserData(1);
				result = obj.GetHashCode();
				L.PushAny<int>(result);
				return 1;
			}
			L.L_Error("call function GetHashCode args is error");
			return 1;
        }
    }
}
