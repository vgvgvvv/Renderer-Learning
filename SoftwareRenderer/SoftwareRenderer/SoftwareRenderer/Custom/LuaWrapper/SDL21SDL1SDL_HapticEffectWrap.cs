//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SDL2;
    using System;
    
    
    public class SDL21SDL1SDL_HapticEffectWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginClass(typeof(SDL2.SDL.SDL_HapticEffect), typeof(System.ValueType));
			L.RegFunction("New", _CreateSDL21SDL1SDL_HapticEffect);
			L.RegVar("type", get_type, set_type);
			L.RegVar("constant", get_constant, set_constant);
			L.RegVar("periodic", get_periodic, set_periodic);
			L.RegVar("condition", get_condition, set_condition);
			L.RegVar("ramp", get_ramp, set_ramp);
			L.RegVar("leftright", get_leftright, set_leftright);
			L.RegVar("custom", get_custom, set_custom);
			L.RegFunction("Equals", Equals);
			L.RegFunction("GetHashCode", GetHashCode);
			L.RegFunction("ToString", ToString);
			L.RegFunction("GetType", GetType);
			L.EndClass();
        }
        
        private static int _CreateSDL21SDL1SDL_HapticEffect(UniLua.ILuaState L)
        {
			if(L.CheckNum(0)) {
				L.PushAny<SDL2.SDL.SDL_HapticEffect>(default(SDL2.SDL.SDL_HapticEffect));
				return 1;
			}
			L.L_Error("call SDL_HapticEffect constructor args is error");
			return 1;
        }
        
        private static int get_type(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			L.PushAny<ushort>(obj.type);
			return 1;
        }
        
        private static int set_type(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			var value = L.CheckAny<ushort>(2);
			obj.type = value;
			// replace old struct
			L.PushAny<SDL2.SDL.SDL_HapticEffect>(obj);
			L.Replace(1);
			return 0;
        }
        
        private static int get_constant(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			L.PushAny<SDL2.SDL.SDL_HapticConstant>(obj.constant);
			return 1;
        }
        
        private static int set_constant(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			var value = L.CheckAny<SDL2.SDL.SDL_HapticConstant>(2);
			obj.constant = value;
			// replace old struct
			L.PushAny<SDL2.SDL.SDL_HapticEffect>(obj);
			L.Replace(1);
			return 0;
        }
        
        private static int get_periodic(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			L.PushAny<SDL2.SDL.SDL_HapticPeriodic>(obj.periodic);
			return 1;
        }
        
        private static int set_periodic(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			var value = L.CheckAny<SDL2.SDL.SDL_HapticPeriodic>(2);
			obj.periodic = value;
			// replace old struct
			L.PushAny<SDL2.SDL.SDL_HapticEffect>(obj);
			L.Replace(1);
			return 0;
        }
        
        private static int get_condition(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			L.PushAny<SDL2.SDL.SDL_HapticCondition>(obj.condition);
			return 1;
        }
        
        private static int set_condition(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			var value = L.CheckAny<SDL2.SDL.SDL_HapticCondition>(2);
			obj.condition = value;
			// replace old struct
			L.PushAny<SDL2.SDL.SDL_HapticEffect>(obj);
			L.Replace(1);
			return 0;
        }
        
        private static int get_ramp(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			L.PushAny<SDL2.SDL.SDL_HapticRamp>(obj.ramp);
			return 1;
        }
        
        private static int set_ramp(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			var value = L.CheckAny<SDL2.SDL.SDL_HapticRamp>(2);
			obj.ramp = value;
			// replace old struct
			L.PushAny<SDL2.SDL.SDL_HapticEffect>(obj);
			L.Replace(1);
			return 0;
        }
        
        private static int get_leftright(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			L.PushAny<SDL2.SDL.SDL_HapticLeftRight>(obj.leftright);
			return 1;
        }
        
        private static int set_leftright(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			var value = L.CheckAny<SDL2.SDL.SDL_HapticLeftRight>(2);
			obj.leftright = value;
			// replace old struct
			L.PushAny<SDL2.SDL.SDL_HapticEffect>(obj);
			L.Replace(1);
			return 0;
        }
        
        private static int get_custom(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			L.PushAny<SDL2.SDL.SDL_HapticCustom>(obj.custom);
			return 1;
        }
        
        private static int set_custom(UniLua.ILuaState L)
        {
			var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
			var value = L.CheckAny<SDL2.SDL.SDL_HapticCustom>(2);
			obj.custom = value;
			// replace old struct
			L.PushAny<SDL2.SDL.SDL_HapticEffect>(obj);
			L.Replace(1);
			return 0;
        }
        
        private static int Equals(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SDL2.SDL.SDL_HapticEffect, object>(1))
			{
				bool result;
				var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
				var arg1 = L.CheckAny<object>(2);
				result = obj.Equals(arg1);
				L.PushAny<bool>(result);
				return 1;
			}
			L.L_Error("call function Equals args is error");
			return 1;
        }
        
        private static int GetHashCode(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				int result;
				var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
				result = obj.GetHashCode();
				L.PushAny<int>(result);
				return 1;
			}
			L.L_Error("call function GetHashCode args is error");
			return 1;
        }
        
        private static int ToString(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				string result;
				var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
				result = obj.ToString();
				L.PushAny<string>(result);
				return 1;
			}
			L.L_Error("call function ToString args is error");
			return 1;
        }
        
        private static int GetType(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				System.Type result;
				var obj = (SDL2.SDL.SDL_HapticEffect) L.ToUserData(1);
				result = obj.GetType();
				L.PushAny<System.Type>(result);
				return 1;
			}
			L.L_Error("call function GetType args is error");
			return 1;
        }
    }
}
