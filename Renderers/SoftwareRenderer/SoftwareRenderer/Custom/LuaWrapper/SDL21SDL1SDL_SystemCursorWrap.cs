//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SDL2;
    
    
    public class SDL21SDL1SDL_SystemCursorWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginEnum(typeof(SDL2.SDL.SDL_SystemCursor));
			L.RegVar("SDL_SYSTEM_CURSOR_ARROW", get_SDL_SYSTEM_CURSOR_ARROW, null);
			L.RegVar("SDL_SYSTEM_CURSOR_IBEAM", get_SDL_SYSTEM_CURSOR_IBEAM, null);
			L.RegVar("SDL_SYSTEM_CURSOR_WAIT", get_SDL_SYSTEM_CURSOR_WAIT, null);
			L.RegVar("SDL_SYSTEM_CURSOR_CROSSHAIR", get_SDL_SYSTEM_CURSOR_CROSSHAIR, null);
			L.RegVar("SDL_SYSTEM_CURSOR_WAITARROW", get_SDL_SYSTEM_CURSOR_WAITARROW, null);
			L.RegVar("SDL_SYSTEM_CURSOR_SIZENWSE", get_SDL_SYSTEM_CURSOR_SIZENWSE, null);
			L.RegVar("SDL_SYSTEM_CURSOR_SIZENESW", get_SDL_SYSTEM_CURSOR_SIZENESW, null);
			L.RegVar("SDL_SYSTEM_CURSOR_SIZEWE", get_SDL_SYSTEM_CURSOR_SIZEWE, null);
			L.RegVar("SDL_SYSTEM_CURSOR_SIZENS", get_SDL_SYSTEM_CURSOR_SIZENS, null);
			L.RegVar("SDL_SYSTEM_CURSOR_SIZEALL", get_SDL_SYSTEM_CURSOR_SIZEALL, null);
			L.RegVar("SDL_SYSTEM_CURSOR_NO", get_SDL_SYSTEM_CURSOR_NO, null);
			L.RegVar("SDL_SYSTEM_CURSOR_HAND", get_SDL_SYSTEM_CURSOR_HAND, null);
			L.RegVar("SDL_NUM_SYSTEM_CURSORS", get_SDL_NUM_SYSTEM_CURSORS, null);
			L.EndEnum();
        }
        
        private static int get_SDL_SYSTEM_CURSOR_ARROW(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_ARROW);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_IBEAM(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_IBEAM);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_WAIT(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_WAIT);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_CROSSHAIR(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_CROSSHAIR);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_WAITARROW(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_WAITARROW);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_SIZENWSE(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZENWSE);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_SIZENESW(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZENESW);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_SIZEWE(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZEWE);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_SIZENS(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZENS);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_SIZEALL(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_SIZEALL);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_NO(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_NO);
			return 1;
        }
        
        private static int get_SDL_SYSTEM_CURSOR_HAND(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_SYSTEM_CURSOR_HAND);
			return 1;
        }
        
        private static int get_SDL_NUM_SYSTEM_CURSORS(UniLua.ILuaState L)
        {
			L.PushLightUserData(SDL2.SDL.SDL_SystemCursor.SDL_NUM_SYSTEM_CURSORS);
			return 1;
        }
    }
}
