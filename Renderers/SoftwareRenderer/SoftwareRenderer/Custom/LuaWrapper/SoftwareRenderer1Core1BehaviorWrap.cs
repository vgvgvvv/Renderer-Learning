//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SoftwareRenderer.Core;
    using System;
    
    
    public class SoftwareRenderer1Core1BehaviorWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginClass(typeof(SoftwareRenderer.Core.Behavior), typeof(SoftwareRenderer.Core.WorldObject));
			L.RegFunction("New", _CreateSoftwareRenderer1Core1Behavior);
			L.RegVar("Owner", get_Owner, null);
			L.RegVar("Transform", get_Transform, set_Transform);
			L.RegFunction("OnUpdate_Add", add_OnUpdate);
			L.RegFunction("OnUpdate_Remove", remove_OnUpdate);
			L.RegFunction("OnBeforeRender_Add", add_OnBeforeRender);
			L.RegFunction("OnBeforeRender_Remove", remove_OnBeforeRender);
			L.RegFunction("BeforeRender", BeforeRender);
			L.RegFunction("Update", Update);
			L.RegFunction("Awake", Awake);
			L.RegFunction("GetType", GetType);
			L.RegFunction("ToString", ToString);
			L.RegFunction("Equals", Equals);
			L.RegFunction("GetHashCode", GetHashCode);
			L.EndClass();
        }
        
        private static int _CreateSoftwareRenderer1Core1Behavior(UniLua.ILuaState L)
        {
			if(L.CheckNum(0))
			{
				L.PushAny<SoftwareRenderer.Core.Behavior>(new SoftwareRenderer.Core.Behavior());
				return 1;
			}
			L.L_Error("call Behavior constructor args is error");
			return 1;
        }
        
        private static int get_Owner(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
			L.PushAny<SoftwareRenderer.Core.WorldObject>(obj.Owner);
			return 1;
        }
        
        private static int get_Transform(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
			L.PushAny<SoftwareRenderer.Core.Transform>(obj.Transform);
			return 1;
        }
        
        private static int set_Transform(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
			var value = L.CheckAny<SoftwareRenderer.Core.Transform>(2);
			obj.Transform = value;
			return 0;
        }
        
        private static int add_OnUpdate(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Core.Behavior, System.Action>(1))
			{
				var obj = L.CheckAny<SoftwareRenderer.Core.Behavior>(1);
				var value = L.CheckAny<System.Action>(2);
				obj.OnUpdate += value;
				L.PushAny<SoftwareRenderer.Core.Behavior>(obj);
				return 1;
			}
			L.L_Error("add method args is error");
			return 1;
        }
        
        private static int remove_OnUpdate(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Core.Behavior, System.Action>(1))
			{
				var obj = L.CheckAny<SoftwareRenderer.Core.Behavior>(1);
				var value = L.CheckAny<System.Action>(2);
				obj.OnUpdate -= value;
				L.PushAny<SoftwareRenderer.Core.Behavior>(obj);
				return 1;
			}
			L.L_Error("add method args is error");
			return 1;
        }
        
        private static int add_OnBeforeRender(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Core.Behavior, System.Action>(1))
			{
				var obj = L.CheckAny<SoftwareRenderer.Core.Behavior>(1);
				var value = L.CheckAny<System.Action>(2);
				obj.OnBeforeRender += value;
				L.PushAny<SoftwareRenderer.Core.Behavior>(obj);
				return 1;
			}
			L.L_Error("add method args is error");
			return 1;
        }
        
        private static int remove_OnBeforeRender(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Core.Behavior, System.Action>(1))
			{
				var obj = L.CheckAny<SoftwareRenderer.Core.Behavior>(1);
				var value = L.CheckAny<System.Action>(2);
				obj.OnBeforeRender -= value;
				L.PushAny<SoftwareRenderer.Core.Behavior>(obj);
				return 1;
			}
			L.L_Error("add method args is error");
			return 1;
        }
        
        private static int BeforeRender(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
				obj.BeforeRender();
				return 0;
			}
			L.L_Error("call function BeforeRender args is error");
			return 1;
        }
        
        private static int Update(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
				obj.Update();
				return 0;
			}
			L.L_Error("call function Update args is error");
			return 1;
        }
        
        private static int Awake(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
				obj.Awake();
				return 0;
			}
			L.L_Error("call function Awake args is error");
			return 1;
        }
        
        private static int GetType(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				System.Type result;
				var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
				result = obj.GetType();
				L.PushAny<System.Type>(result);
				return 1;
			}
			L.L_Error("call function GetType args is error");
			return 1;
        }
        
        private static int ToString(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				string result;
				var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
				result = obj.ToString();
				L.PushAny<string>(result);
				return 1;
			}
			L.L_Error("call function ToString args is error");
			return 1;
        }
        
        private static int Equals(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Core.Behavior, object>(1))
			{
				bool result;
				var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
				var arg1 = L.CheckAny<object>(2);
				result = obj.Equals(arg1);
				L.PushAny<bool>(result);
				return 1;
			}
			L.L_Error("call function Equals args is error");
			return 1;
        }
        
        private static int GetHashCode(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				int result;
				var obj = (SoftwareRenderer.Core.Behavior) L.ToUserData(1);
				result = obj.GetHashCode();
				L.PushAny<int>(result);
				return 1;
			}
			L.L_Error("call function GetHashCode args is error");
			return 1;
        }
    }
}
