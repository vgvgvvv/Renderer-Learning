//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniToLua
{
    using SoftwareRenderer.Core;
    using UniLua;
    using System.Collections.Generic;
    using System;
    
    
    public class SoftwareRenderer1Core1LuaManagerWrap
    {
        
        public static void Register(UniLua.ILuaState L)
        {
			L.BeginClass(typeof(SoftwareRenderer.Core.LuaManager), null);
			L.RegFunction("New", _CreateSoftwareRenderer1Core1LuaManager);
			L.RegVar("L", get_L, null);
			L.RegVar("LuaDirectories", get_LuaDirectories, null);
			L.RegFunction("Init", Init);
			L.RegFunction("GetType", GetType);
			L.RegFunction("ToString", ToString);
			L.RegFunction("Equals", Equals);
			L.RegFunction("GetHashCode", GetHashCode);
			L.EndClass();
        }
        
        private static int _CreateSoftwareRenderer1Core1LuaManager(UniLua.ILuaState L)
        {
			if(L.CheckNum(0))
			{
				L.PushAny<SoftwareRenderer.Core.LuaManager>(new SoftwareRenderer.Core.LuaManager());
				return 1;
			}
			L.L_Error("call LuaManager constructor args is error");
			return 1;
        }
        
        private static int get_L(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.LuaManager) L.ToUserData(1);
			L.PushAny<UniLua.LuaState>(obj.L);
			return 1;
        }
        
        private static int get_LuaDirectories(UniLua.ILuaState L)
        {
			var obj = (SoftwareRenderer.Core.LuaManager) L.ToUserData(1);
			L.PushAny<System.Collections.Generic.List<string>>(obj.LuaDirectories);
			return 1;
        }
        
        private static int Init(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				var obj = (SoftwareRenderer.Core.LuaManager) L.ToUserData(1);
				obj.Init();
				return 0;
			}
			L.L_Error("call function Init args is error");
			return 1;
        }
        
        private static int GetType(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				System.Type result;
				var obj = (SoftwareRenderer.Core.LuaManager) L.ToUserData(1);
				result = obj.GetType();
				L.PushAny<System.Type>(result);
				return 1;
			}
			L.L_Error("call function GetType args is error");
			return 1;
        }
        
        private static int ToString(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				string result;
				var obj = (SoftwareRenderer.Core.LuaManager) L.ToUserData(1);
				result = obj.ToString();
				L.PushAny<string>(result);
				return 1;
			}
			L.L_Error("call function ToString args is error");
			return 1;
        }
        
        private static int Equals(UniLua.ILuaState L)
        {
			if(L.CheckNum(2) && L.CheckType<SoftwareRenderer.Core.LuaManager, object>(1))
			{
				bool result;
				var obj = (SoftwareRenderer.Core.LuaManager) L.ToUserData(1);
				var arg1 = L.CheckAny<object>(2);
				result = obj.Equals(arg1);
				L.PushAny<bool>(result);
				return 1;
			}
			L.L_Error("call function Equals args is error");
			return 1;
        }
        
        private static int GetHashCode(UniLua.ILuaState L)
        {
			if(L.CheckNum(1))
			{
				int result;
				var obj = (SoftwareRenderer.Core.LuaManager) L.ToUserData(1);
				result = obj.GetHashCode();
				L.PushAny<int>(result);
				return 1;
			}
			L.L_Error("call function GetHashCode args is error");
			return 1;
        }
    }
}
